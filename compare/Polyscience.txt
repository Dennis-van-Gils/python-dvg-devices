def query(self, msg_str):
    """Send a command to the serial device and subsequently read the reply.

    Args:
        msg_str (str): Message to be sent to the serial device.

    Returns:
        success (bool): True if successful, False otherwise.
        ans_str (str): Reply received from the device. None if unsuccessful.
    """
    success = False
    ans_str = None

    try:
        # Send command string to the device as bytes
        self.ser.write(msg_str.replace(" ", "").encode())
    except serial.SerialTimeoutException:
        print("ERROR: serial.write() timed out in query()")
    except serial.SerialException:
        print("ERROR: serial.write() failed in query()")
    except:
        raise
    else:
        try:
            # Read all bytes in the line that is terminated with a carriage
            # return character or until time-out has occured
            # sleep(.1)  # DEBUG
            ans_bytes = self._readline()
        except serial.SerialTimeoutException:
            print("ERROR: _readline() timed out in query()")
        except serial.SerialException:
            print("ERROR: _readline() failed in query()")
        except:
            raise
        else:
            # Convert bytes into string and remove termination chars and
            # spaces
            ans_str = ans_bytes.decode().strip()
            success = True

    return [success, ans_str]